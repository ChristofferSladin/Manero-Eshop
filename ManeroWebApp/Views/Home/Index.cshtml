@{
    ViewData["Title"] = "Home Page";
    var bestSellerCarousel = new CarouselViewModel { IdSuffix = "1", Title = "Best Sellers" };
    var featuredProductsCarousel = new CarouselViewModel { IdSuffix = "2", Title = "Featured Products" };
}

<div class="homePage">

    <section class="showcase">
        <div class="showcase-img">
            <div class="showcase-grid">
                <div class="grid-item"></div>
                <div class="grid-item"></div>
                <div class="grid-item">
                    <p class="showcase-text">Welcome to Manero!</p>
                    <p class="showcase-text">50% OFF</p>
                </div>
                <div class="grid-item"></div>
            </div>
        </div>

    </section>

    <section class="bestseller-carousel-section">
        @await Html.PartialAsync("_CarouselPartial", bestSellerCarousel)
    </section>

    <section class="discount-offer">
        <div class="discount-offer-img">
            <div class="discount-offer-title">
                <p class="discount-offer-text">Take 50% off now!</p>
            </div>
            <button class="discount-offer-btn">shop now</button>
        </div>
    </section>

    <section class="featured-carousel-section">
        @await Html.PartialAsync("_CarouselPartial", featuredProductsCarousel)
    </section>


</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            // Function to update the carousel's current slide
            function updateCarousel(carouselSlides, currentIndex, totalItemWidth) {
                carouselSlides.style.transform = `translateX(-${currentIndex * totalItemWidth}px)`;
            }

            // Setup function
            function setupCarousel(carouselId) {
                // Ensure carouselId is not undefined before proceeding
                if (typeof carouselId === 'undefined') {
                    console.error('carouselId is undefined. Cannot set up the carousel.');
                    return;
                }

                const carousel = document.querySelector(`[data-carousel-id='${carouselId}']`);
                // Make sure we found the carousel element
                if (!carousel) {
                    console.error(`No carousel found with the ID: ${carouselId}`);
                    return;
                }

                console.log('Setting up carousel:', carouselId);
                const carouselSlides = carousel.querySelector('.carousel-slides');
                let currentIndex = 0;

                // Calculate total item width including margin
                const itemStyle = window.getComputedStyle(carousel.querySelector('.product-card'));
                const itemWidth = parseFloat(itemStyle.width);
                const itemMargin = parseFloat(itemStyle.marginLeft) + parseFloat(itemStyle.marginRight);
                const totalItemWidth = itemWidth + itemMargin;

                // Select the buttons using the data attribute and add click events
                const prevButton = carousel.querySelector(`.carousel-control-prev`);
                const nextButton = carousel.querySelector(`.carousel-control-next`);

                prevButton.addEventListener('click', function () {
                    console.log('Prev clicked:', carouselId);
                    if (currentIndex > 0) {
                        currentIndex -= 1;
                        updateCarousel(carouselSlides, currentIndex, totalItemWidth);
                    }
                });

                nextButton.addEventListener('click', function () {
                    console.log('Next clicked:', carouselId);
                    // Obtain the number of items dynamically
                    const numberOfItems = carouselSlides.querySelectorAll('.product-card').length;
                    if (currentIndex < numberOfItems - 1) {
                        currentIndex += 1;
                        updateCarousel(carouselSlides, currentIndex, totalItemWidth);
                    }
                });
            }

            // Load and setup each carousel
            $('.carousel').each(function () {
                const carouselId = $(this).data('carousel-id');
                console.log('Found carousel with ID:', carouselId);

                const productPartial = $(this).find('.productPartial');
                productPartial.load(`/Product/CarouselProductCardsPartial?carouselId=${carouselId}`, function (response, status, xhr) {
                    if (status == "error") {
                        console.log("Error loading carousel items:", xhr.status, xhr.statusText);
                    } else {
                        console.log(`Carousel items loaded for ID: ${carouselId}`);
                        // After loading the content, setup the carousel
                        setupCarousel(carouselId);
                    }
                });
            });
        });
    </script>

}
